/************************************************************************
 * MechSys - Open Library for Mechanical Systems                        *
 * Copyright (C) 2005 Dorival M. Pedroso, Ra√∫l D. D. Farfan             *
 *                                                                      *
 * This program is free software: you can redistribute it and/or modify *
 * it under the terms of the GNU General Public License as published by *
 * the Free Software Foundation, either version 3 of the License, or    *
 * any later version.                                                   *
 *                                                                      *
 * This program is distributed in the hope that it will be useful,      *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the         *
 * GNU General Public License for more details.                         *
 *                                                                      *
 * You should have received a copy of the GNU General Public License    *
 * along with this program. If not, see <http://www.gnu.org/licenses/>  *
 ************************************************************************/

/*  Smith & Griffiths (2004): Figure 5.24 p193 
 *  ==========================================  */

// STL
#include <iostream>

// MechSys
#include <mechsys/mesh/mesh.h>
#include <mechsys/mesh/structured.h>
#include <mechsys/fem/elems/hex20.h>
#include <mechsys/fem/equilibelem.h>
#include <mechsys/fem/domain.h>
#include <mechsys/fem/solver.h>
#include <mechsys/models/linelastic.h>
#include <mechsys/util/maps.h>
#include <mechsys/util/util.h>
#include <mechsys/util/fatal.h>
#include <mechsys/draw.h>

using std::cout;
using std::endl;
using FEM::PROB;
using FEM::GEOM;

int main(int argc, char **argv) try
{
    ///////////////////////////////////////////////////////////////////////////////////////// Mesh /////
    
    Mesh::Generic mesh(/*NDim*/3);
    mesh.SetSize    (70/*verts*/, 6/*cells*/);

    mesh.SetVert    ( 0,-100,  0.0 ,  0.0,  0.0);
    mesh.SetVert    ( 1,-200,  0.25,  0.0,  0.0);
    mesh.SetVert    ( 2,-100,  0.5 ,  0.0,  0.0);
    mesh.SetVert    ( 3,   0,  0.0 ,  0.0, -0.5);
    mesh.SetVert    ( 4,   0,  0.5 ,  0.0, -0.5);
    mesh.SetVert    ( 5,   0,  0.0 ,  0.0, -1.0);
    mesh.SetVert    ( 6,   0,  0.25,  0.0, -1.0);
    mesh.SetVert    ( 7,   0,  0.5 ,  0.0, -1.0);
    mesh.SetVert    ( 8,   0,  0.0 ,  0.0, -1.5);
    mesh.SetVert    ( 9,   0,  0.5 ,  0.0, -1.5);
    mesh.SetVert    (10,   0,  0.0 ,  0.0, -2.0);
    mesh.SetVert    (11,   0,  0.25,  0.0, -2.0);
    mesh.SetVert    (12,   0,  0.5 ,  0.0, -2.0);

    mesh.SetVert    (13,-200,  0.0 ,  0.5,  0.0);
    mesh.SetVert    (14,-200,  0.5 ,  0.5,  0.0);
    mesh.SetVert    (15,   0,  0.0 ,  0.5, -1.0);
    mesh.SetVert    (16,   0,  0.5 ,  0.5, -1.0);
    mesh.SetVert    (17,   0,  0.0 ,  0.5, -2.0);
    mesh.SetVert    (18,   0,  0.5 ,  0.5, -2.0);

    mesh.SetVert    (19,-100,  0.0 ,  1.0,  0.0);
    mesh.SetVert    (20,-200,  0.25,  1.0,  0.0);
    mesh.SetVert    (21,-100,  0.5 ,  1.0,  0.0);
    mesh.SetVert    (22,   0,  0.0 ,  1.0, -0.5);
    mesh.SetVert    (23,   0,  0.5 ,  1.0, -0.5);
    mesh.SetVert    (24,   0,  0.0 ,  1.0, -1.0);
    mesh.SetVert    (25,   0,  0.25,  1.0, -1.0);
    mesh.SetVert    (26,   0,  0.5 ,  1.0, -1.0);
    mesh.SetVert    (27,   0,  0.0 ,  1.0, -1.5);
    mesh.SetVert    (28,   0,  0.5 ,  1.0, -1.5);
    mesh.SetVert    (29,   0,  0.0 ,  1.0, -2.0);
    mesh.SetVert    (30,   0,  0.25,  1.0, -2.0);
    mesh.SetVert    (31,   0,  0.5 ,  1.0, -2.0);

    mesh.SetVert    (32,   0,  0.0 ,  1.5,  0.0);
    mesh.SetVert    (33,   0,  0.5 ,  1.5,  0.0);
    mesh.SetVert    (34,   0,  0.0 ,  1.5, -1.0);
    mesh.SetVert    (35,   0,  0.5 ,  1.5, -1.0);
    mesh.SetVert    (36,   0,  0.0 ,  1.5, -2.0);
    mesh.SetVert    (37,   0,  0.5 ,  1.5, -2.0);

    mesh.SetVert    (38,   0,  0.0 ,  2.0,  0.0);
    mesh.SetVert    (39,   0,  0.25,  2.0,  0.0);
    mesh.SetVert    (40,   0,  0.5 ,  2.0,  0.0);
    mesh.SetVert    (41,   0,  0.0 ,  2.0, -0.5);
    mesh.SetVert    (42,   0,  0.5 ,  2.0, -0.5);
    mesh.SetVert    (43,   0,  0.0 ,  2.0, -1.0);
    mesh.SetVert    (44,   0,  0.25,  2.0, -1.0);
    mesh.SetVert    (45,   0,  0.5 ,  2.0, -1.0);
    mesh.SetVert    (46,   0,  0.0 ,  2.0, -1.5);
    mesh.SetVert    (47,   0,  0.5 ,  2.0, -1.5);
    mesh.SetVert    (48,   0,  0.0 ,  2.0, -2.0);
    mesh.SetVert    (49,   0,  0.25,  2.0, -2.0);
    mesh.SetVert    (50,   0,  0.5 ,  2.0, -2.0);

    mesh.SetVert    (51,   0,  0.0 ,  2.5,  0.0);
    mesh.SetVert    (52,   0,  0.5 ,  2.5,  0.0);
    mesh.SetVert    (53,   0,  0.0 ,  2.5, -1.0);
    mesh.SetVert    (54,   0,  0.5 ,  2.5, -1.0);
    mesh.SetVert    (55,   0,  0.0 ,  2.5, -2.0);
    mesh.SetVert    (56,   0,  0.5 ,  2.5, -2.0);

    mesh.SetVert    (57,   0,  0.0 ,  3.0,  0.0);
    mesh.SetVert    (58,   0,  0.25,  3.0,  0.0);
    mesh.SetVert    (59,   0,  0.5 ,  3.0,  0.0);
    mesh.SetVert    (60,   0,  0.0 ,  3.0, -0.5);
    mesh.SetVert    (61,   0,  0.5 ,  3.0, -0.5);
    mesh.SetVert    (62,   0,  0.0 ,  3.0, -1.0);
    mesh.SetVert    (63,   0,  0.25,  3.0, -1.0);
    mesh.SetVert    (64,   0,  0.5 ,  3.0, -1.0);
    mesh.SetVert    (65,   0,  0.0 ,  3.0, -1.5);
    mesh.SetVert    (66,   0,  0.5 ,  3.0, -1.5);
    mesh.SetVert    (67,   0,  0.0 ,  3.0, -2.0);
    mesh.SetVert    (68,   0,  0.25,  3.0, -2.0);
    mesh.SetVert    (69,   0,  0.5 ,  3.0, -2.0);

    mesh.SetCell    ( 0, -1, Array<int>( 5, 7,26,24, 0, 2,21,19, 6,16,25,15, 1,14,20,13, 3, 4,23,22));
    mesh.SetCell    ( 1, -2, Array<int>(10,12,31,29, 5, 7,26,24,11,18,30,17, 6,16,25,15, 8, 9,28,27));
    mesh.SetCell    ( 2, -1, Array<int>(24,26,45,43,19,21,40,38,25,35,44,34,20,33,39,32,22,23,42,41));
    mesh.SetCell    ( 3, -2, Array<int>(29,31,50,48,24,26,45,43,30,37,49,36,25,35,44,34,27,28,47,46));
    mesh.SetCell    ( 4, -1, Array<int>(43,45,64,62,38,40,59,57,44,54,63,53,39,52,58,51,41,42,61,60));
    mesh.SetCell    ( 5, -2, Array<int>(48,50,69,67,43,45,64,62,49,56,68,55,44,54,63,53,46,47,66,65));

    mesh.SetBryTag  (0, 0, -10);
    mesh.SetBryTag  (0, 2, -20);
    //mesh.SetBryTag  (0, 5, -40);
    mesh.SetBryTag  (1, 0, -10);
    mesh.SetBryTag  (1, 2, -20);
    mesh.SetBryTag  (1, 4, -30);

    mesh.SetBryTag  (2, 0, -10);
    mesh.SetBryTag  (3, 0, -10);
    mesh.SetBryTag  (3, 4, -30);

    mesh.SetBryTag  (4, 0, -10);
    mesh.SetBryTag  (5, 0, -10);
    mesh.SetBryTag  (5, 4, -30);

    //mesh.WriteVTU   ("fig_05_24");
    //cout << mesh << endl;
    
    ////////////////////////////////////////////////////////////////////////////////////////// FEM /////

    // elements properties
    Dict prps;
    prps.Set(-1, "prob geom active nip", PROB("Equilib"), GEOM("Hex20"), 1.0, 8.0);
    prps.Set(-2, "prob geom active nip", PROB("Equilib"), GEOM("Hex20"), 1.0, 8.0);

    // models
    Dict mdls;
    mdls.Set(-1, "name E nu", MODEL("LinElastic"),  100.0, 0.3,  1.0);
    mdls.Set(-2, "name E nu", MODEL("LinElastic"),   50.0, 0.3,  1.0);

    // initial values
    Dict inis;
    inis.Set(-1, "sx sy sz sxy", 0.0,0.0,0.0,0.0);
    inis.Set(-2, "sx sy sz sxy", 0.0,0.0,0.0,0.0);

    // domain
    FEM::Domain dom(mesh, prps, mdls, inis);

    // solver
    FEM::Solver sol(dom);
    sol.Scheme = FEM::Solver::FE_t;

    // stage # 1 -----------------------------------------------------------
    Dict bcs;
    bcs.Set(-100, "fz",  0.0417);
    bcs.Set(-200, "fz", -0.1667);
    //bcs.Set( -40, "qy", -1.0);
    bcs.Set( -10, "ux",       0.0);
    bcs.Set( -20, "uy",       0.0);
    bcs.Set( -30, "ux uy uz", 0.0,0.0,0.0);
    dom.SetBCs (bcs);
    //cout << dom << endl;
    sol.Solve ();

    //////////////////////////////////////////////////////////////////////////////////////// Output ////

    //dom.PrintResults ("%11.6g");
    //dom.WriteVTU   ("fig_05_24");

    //////////////////////////////////////////////////////////////////////////////////////// Check /////
    
    Table nod_sol;
    nod_sol.Set("ux uy uz", dom.Nods.Size(),
       0.000000000000000E+00,  0.000000000000000E+00, -2.246347084551236E-02,
       1.583533151292782E-03,  0.000000000000000E+00, -2.255393943959001E-02,
       3.220086429625649E-03,  0.000000000000000E+00, -2.333080568038473E-02,
       0.000000000000000E+00,  0.000000000000000E+00, -1.849043628520535E-02,
       1.543646337680319E-03,  0.000000000000000E+00, -1.883760248896414E-02,
       0.000000000000000E+00,  0.000000000000000E+00, -1.442659959332958E-02,
       7.581181943686333E-04,  0.000000000000000E+00, -1.435284871221010E-02,
       1.510770238131116E-03,  0.000000000000000E+00, -1.410762498329099E-02,
       0.000000000000000E+00,  0.000000000000000E+00, -6.163718905594009E-03,
       2.791740187814713E-03,  0.000000000000000E+00, -6.429638686950786E-03,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00, -2.636620496523050E-03, -2.091497948288538E-02,
       2.681677651464960E-03, -2.351684531012891E-03, -2.156679429586823E-02,
       0.000000000000000E+00,  1.920886717070358E-03, -1.258000900042770E-02,
       1.401580418768840E-03,  2.013340247449019E-03, -1.228974275154634E-02,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00, -4.404981175789156E-03, -1.365965203530570E-02,
       6.192483795629831E-04, -4.364683902429316E-03, -1.368261677877240E-02,
       1.280307716613930E-03, -3.937219777613096E-03, -1.386506269262304E-02,
       0.000000000000000E+00,  1.078170867081458E-03, -1.150366327069370E-02,
       8.754415356300576E-04,  1.490221892346030E-03, -1.152005921380259E-02,
       0.000000000000000E+00,  2.958295463657766E-03, -9.172143775217552E-03,
       5.427998204887530E-04,  2.965766844941005E-03, -9.093537641138206E-03,
       1.086759767227244E-03,  3.083941056730029E-03, -8.864376938531456E-03,
       0.000000000000000E+00,  2.375669564035337E-03, -4.184288525644187E-03,
       2.000002573276869E-03,  2.632279040385321E-03, -4.380320869217209E-03,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00, -3.580016648413837E-03, -5.979374273810762E-03,
      -7.434638380964975E-05, -3.321158639873762E-03, -5.812858913992043E-03,
       0.000000000000000E+00,  3.150654743473785E-03, -5.382993118730822E-03,
       7.612000232719035E-04,  3.312568168671742E-03, -5.104029499792058E-03,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00, -2.120948625021810E-03, -2.575633224597289E-03,
      -1.816246042762300E-04, -2.066444640224184E-03, -2.541068218277465E-03,
      -3.530266971970145E-04, -2.120321795218550E-03, -2.337790153492454E-03,
       0.000000000000000E+00,  2.687182058805475E-04, -2.403797241083578E-03,
       1.000479849273647E-04,  3.146371148261753E-04, -2.217984973952085E-03,
       0.000000000000000E+00,  2.651365011444300E-03, -2.133133596422481E-03,
       2.082137603898851E-04,  2.668818739233793E-03, -2.080360040782973E-03,
       4.197890653658660E-04,  2.802415372347525E-03, -1.956535480074440E-03,
       0.000000000000000E+00,  2.293415103238368E-03, -1.130490294385084E-03,
       6.751997500436699E-04,  2.510903712920320E-03, -1.197902689561229E-03,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00, -1.712291682872700E-03, -5.376254787559141E-04,
      -9.194692826416930E-05, -1.719403339987008E-03, -4.759107524728893E-04,
       0.000000000000000E+00,  2.044723042196544E-03, -3.706552779963799E-04,
       8.501171983671009E-05,  2.179727451296570E-03, -2.926182413887127E-04,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00, -1.707806869074240E-03,  1.459455668335564E-03,
      -3.549251809384793E-05, -1.701950634641138E-03,  1.490896328624761E-03,
      -7.239581275430282E-05, -1.670036441986714E-03,  1.451953228172754E-03,
       0.000000000000000E+00,  3.922334156895817E-04,  1.136691564328167E-03,
      -1.456178432000254E-04,  4.848115407724196E-04,  1.138450128357735E-03,
       0.000000000000000E+00,  1.667966295760210E-03,  5.260752671179705E-04,
      -9.978009212936375E-05,  1.700229972915351E-03,  5.388904225798207E-04,
      -2.111305284838317E-04,  1.825746337701156E-03,  5.433207525796557E-04,
       0.000000000000000E+00,  1.572057618883754E-03, -1.028379544719564E-04,
      -7.448353813973970E-05,  1.715763820799789E-03, -5.845849709250639E-05,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00,
       0.000000000000000E+00,  0.000000000000000E+00,  0.000000000000000E+00);

    /*
    for (size_t i=0; i<dom.Eles.Size(); ++i)
    {
        for (size_t j=0; j<8; ++j)
        {
            Vec_t X;
            SDPair res;
            dom.Eles[i]->GetState (res, j);
            dom.Eles[i]->CoordsOfIP (j, X);
            cout << Util::_4<<i << Util::_8s<<X(0) << Util::_8s<<X(1) << Util::_8s<<X(2) << Util::_8s<<res("sx") << Util::_8s<<res("sy") << Util::_8s<<res("sz") << Util::_8s<<res("sxy") << Util::_8s<<res("syz") << Util::_8s<<res("szx") << endl;
        }
        cout << endl;
    }
    */

    Table ele_sol;
    ele_sol.Set("sx sy sz sxy syz szx", dom.Eles.Size()*8/*nip*/,
              3.907812435701202E-02,  7.934989858705638E-02, -8.460237388642660E-01,  2.975494237310489E-03,  7.261113085377105E-02, -4.146261022073289E-04,
              1.316876003210795E-02,  6.648638162715256E-02, -9.310674953854429E-01,  9.235237134986331E-03,  7.658824252979674E-02,  5.360441713765183E-04,
              1.949593402415984E-02,  2.006992438289726E-03, -6.780050387238353E-01,  4.127467028976879E-05,  2.203898913067816E-01, -7.128266936822119E-04,
              2.542323835998452E-03, -9.493691734887176E-03, -7.370988638972363E-01,  5.978520093817590E-03,  2.365393247624744E-01,  5.742539486491107E-03,
             -1.519740866030224E-02, -5.294155345331326E-01, -1.012818630372994E+00,  4.054603471039512E-04, -2.531175044704871E-02,  1.531476565950780E-02,
             -2.881402818133237E-03, -5.052368429802210E-01, -1.056124139072877E+00,  2.955473056015430E-03, -1.793873028002965E-02,  1.330419137852263E-02,
             -2.856774150684904E-02, -3.451342749110439E-01, -7.534570473709690E-01, -9.065663481883280E-03,  1.497905738047255E-01,  4.922358316731079E-03,
             -1.337613446855831E-02, -3.260979793595327E-01, -7.754214845504196E-01, -9.929191143511136E-03,  1.679733756484206E-01,  1.043835422490668E-02,

             -8.729422974279817E-02, -1.533251618026774E-01, -6.682223732165898E-01, -5.330113854011522E-04,  3.242193692282205E-02,  1.442357980125335E-02,
             -9.545859765696431E-02, -1.575573820434290E-01, -6.905432898121019E-01, -4.822773857705426E-03,  3.439340628321948E-02,  8.317222601640056E-02,
             -7.375126300127510E-02, -1.353848115145583E-01, -5.490843354721328E-01,  1.917697685302478E-03,  1.039350800261019E-01,  1.144117868873057E-02,
             -8.057738911988802E-02, -1.390646367903647E-01, -5.681191947761611E-01, -2.286586463315241E-03,  1.098311468032723E-01,  6.866284199441350E-02,
             -1.489464599424260E-02, -5.885857607323074E-02, -8.089553602888309E-01, -5.668792593613480E-04,  5.307427096310764E-02, -1.909525328771304E-02,
              9.573762904869935E-03, -2.755286257503448E-02, -7.562312113101514E-01, -4.852885100432867E-03,  5.253176106995555E-02, -3.992556450300872E-02,
             -6.579318767445427E-03, -8.102640849513980E-02, -6.191721719291614E-01,  7.416218953296133E-04,  1.167949294444728E-01, -1.562899927197456E-02,
              1.524536191485862E-02, -5.529724644846709E-02, -5.720065655747084E-01, -3.225396300469465E-03,  1.151235072862310E-01, -3.144111583501325E-02,

              1.406184004603794E-02, -1.315908784153751E-01, -2.943897684257430E-01, -6.320601617304398E-04,  2.133120227759625E-01, -1.243061657916211E-04,
              4.827624574118227E-04, -1.536180340593384E-01, -3.310312809663117E-01,  6.335091436905178E-03,  2.265376065253359E-01, -4.824872616113377E-03,
              1.527988106995383E-04, -1.657019120885079E-01, -6.968042436231081E-02,  7.562624826565398E-04,  5.813076829366647E-02,  2.437478830055037E-04,
             -5.763611509855911E-03, -1.839347882542966E-01, -8.018359827250464E-02,  8.442195911614443E-03,  5.450786051391509E-02, -5.068036066864418E-03,
              1.172496638498668E-02, -4.731762602270091E-02, -2.273715766447266E-01, -8.977464388622583E-03,  1.441584514640580E-01,  5.910763229502667E-03,
              9.647146064561372E-03, -7.728157670975543E-02, -2.475255983886543E-01, -1.306604604096591E-02,  1.594274875856511E-01,  1.724826930604318E-03,
              9.136583753397615E-03,  1.133752967580026E-01,  4.634637808693323E-02,  6.447059879886519E-03, -1.757763568492810E-02,  8.139677578371159E-04,
              3.520213841946896E-03,  7.987606943884167E-02,  3.966378535616671E-02,  5.737456339461993E-03, -1.727704644235484E-02, -2.032741004664282E-03,

             -5.688141938208649E-02, -1.306031190005925E-01, -4.030067376664772E-01,  1.585039723527701E-03,  1.279164591030588E-01,  8.859748467895353E-03,
             -6.387652368135845E-02, -1.380518263559832E-01, -4.191394530960625E-01, -5.175067264317173E-03,  1.355626307424137E-01,  5.390804647942295E-02,
             -2.824201361716548E-02, -7.949909512830705E-02, -2.042312454436712E-01,  8.761553681026412E-04,  1.208859352689368E-01,  4.605378620971697E-03,
             -3.248547212703498E-02, -8.475463642684380E-02, -2.135917354424766E-01, -5.910887737262116E-03,  1.275291706434337E-01,  2.984131237286956E-02,
             -6.390378965995582E-03, -1.110150904643008E-01, -4.369686398097297E-01,  4.450417913180807E-04,  1.287691296227602E-01, -1.121601679210938E-02,
              1.143346014805067E-02, -9.278812943774274E-02, -3.967695634714216E-01, -4.737178662345646E-03,  1.267428177871098E-01, -2.326404557724987E-02,
             -2.111527958126406E-03, -1.030845863488076E-01, -2.018311686552134E-01, -1.045662916222519E-04,  1.044218208154031E-01, -5.231981320998716E-03,
              9.020594304125756E-03, -9.363362172632252E-02, -1.759334790276724E-01, -5.387314195517042E-03,  1.018379343874212E-01, -1.009569049831762E-02,

             -3.349267622684299E-03, -7.567397863429211E-02, -7.091486762924912E-02, -2.813778969680886E-03, -6.566164397542177E-03,  3.499141008958664E-04,
             -3.528515146551210E-03, -7.731800405549560E-02, -7.264462808879389E-02, -4.705299677778528E-04, -1.614661372136410E-02,  4.234363119911353E-03,
             -1.123746160829349E-04, -1.218923486103836E-02,  5.685576644374032E-02, -2.414753005128388E-03, -1.578556734066927E-02,  2.300253295906048E-03,
             -3.032140437008531E-03, -9.373039740893688E-03,  5.418386395883379E-02, -6.409540328114599E-05, -2.155791727955449E-02,  4.175432704620320E-03,
             -7.846761150753598E-03,  5.618743343577073E-02, -2.704145668245510E-02,  6.167115794061374E-03, -1.179669808059301E-02, -3.982040495300702E-03,
             -2.335609296837117E-03,  5.905471892219567E-02, -2.103282379948056E-02,  4.726359717337541E-03, -2.097034324865226E-02,  1.149372547215271E-03,
             -2.034608811173782E-03,  1.096417643908970E-02,  1.630099571347160E-02, -3.483502196581488E-04, -2.041629802478352E-02,  2.019062309867078E-03,
              4.074418016105907E-04,  1.838956698262798E-02,  1.848152351288098E-02, -7.603963045894419E-04, -2.519867593936058E-02, -1.372403895703864E-04,

             -1.790330843661615E-02, -5.796336939244983E-02, -1.039786563437905E-01,  1.575159012272695E-03,  9.882407391308289E-02,  2.211232296995031E-03,
             -2.114247211566441E-02, -6.253112383941038E-02, -1.102416369454366E-01, -1.134675450192090E-03,  1.045363540748363E-01,  1.584537404026480E-02,
             -1.301912922686488E-02, -2.999423769802587E-02, -3.499833086869870E-02,  6.653217063781771E-04,  7.364894817400135E-02,  9.503927666458056E-04,
             -1.378966112812319E-02, -3.134900501208474E-02, -3.484308993159966E-02, -2.083230653753361E-03,  7.846694822970371E-02,  3.251137561851479E-03,
              2.798779822817056E-03, -7.714187520136109E-02, -6.839822677031994E-02,  2.898426485491883E-04,  5.526113958931552E-02, -3.297616716931035E-03,
              8.095619125047544E-03, -7.368319014360784E-02, -5.432587903014851E-02, -1.042353861761255E-03,  5.322824321094004E-02, -6.036735358058609E-03,
              9.418022368793790E-03, -1.949265902221481E-02,  4.487198341243633E-02,  1.449183357323578E-05,  2.070541110798884E-02, -7.197208285411266E-04,
              7.994815869765675E-03, -1.997605238588418E-02,  4.572020343972109E-02, -1.462196327677592E-03,  2.062152204820708E-02, -4.287799832616918E-03);

    // error tolerance
    SDPair nod_tol, ele_tol;
    nod_tol.Set("ux uy uz",              1.0e-9, 1.0e-9, 1.0e-8);
    ele_tol.Set("sx sy sz  sxy syz szx", 1.0e-8, 1.0e-7, 1.0e-7, 1.0e-8, 1.0e-7, 1.0e-7);

    // return error flag
    bool err_nods = dom.CheckError   (nod_sol, nod_tol);
    bool err_eles = dom.CheckErrorIP (ele_sol, ele_tol);
    return (err_nods || err_eles);
}
MECHSYS_CATCH
