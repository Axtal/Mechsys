/************************************************************************
 * MechSys - Open Library for Mechanical Systems                        *
 * Copyright (C) 2005 Dorival M. Pedroso, Ra√∫l D. D. Farfan             *
 *                                                                      *
 * This program is free software: you can redistribute it and/or modify *
 * it under the terms of the GNU General Public License as published by *
 * the Free Software Foundation, either version 3 of the License, or    *
 * any later version.                                                   *
 *                                                                      *
 * This program is distributed in the hope that it will be useful,      *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the         *
 * GNU General Public License for more details.                         *
 *                                                                      *
 * You should have received a copy of the GNU General Public License    *
 * along with this program. If not, see <http://www.gnu.org/licenses/>  *
 ************************************************************************/

/*  Smith & Griffiths (2004): Figure 5.17 p182 
 *  ==========================================  */

// STL
#include <iostream>

// MechSys
#include <mechsys/mesh/mesh.h>
#include <mechsys/mesh/structured.h>
#include <mechsys/fem/elems/quad4.h>
#include <mechsys/fem/equilibelem.h>
#include <mechsys/fem/domain.h>
#include <mechsys/fem/solver.h>
#include <mechsys/models/linelastic.h>
#include <mechsys/util/maps.h>
#include <mechsys/util/util.h>
#include <mechsys/util/fatal.h>
#include <mechsys/draw.h>

using std::cout;
using std::endl;
using FEM::PROB;
using FEM::GEOM;

int main(int argc, char **argv) try
{
    ///////////////////////////////////////////////////////////////////////////////////////// Mesh /////
    
    Mesh::Generic mesh(/*NDim*/2);
    mesh.ReadMesh ("fig_05_17");
    //mesh.WriteMPY ("fig_05_17");
    
    ////////////////////////////////////////////////////////////////////////////////////////// FEM /////

    // elements properties
    Dict prps;
    prps.Set(-1, "prob geom active axs nip", PROB("Equilib"), GEOM("Quad4"), 1.0, 1.0, 9.0);
    prps.Set(-2, "prob geom active axs nip", PROB("Equilib"), GEOM("Quad4"), 1.0, 1.0, 9.0);

    // models
    Dict mdls;
    mdls.Set(-1, "name E nu axs rho", MODEL("LinElastic"),  100.0, 0.3,  1.0, 1.0);
    mdls.Set(-2, "name E nu axs rho", MODEL("LinElastic"), 1000.0, 0.45, 1.0, 1.0);

    // initial values
    Dict inis;
    inis.Set(-1, "sx sy sz sxy", 0.0,0.0,0.0,0.0);
    inis.Set(-2, "sx sy sz sxy", 0.0,0.0,0.0,0.0);

    // domain
    FEM::Domain dom(mesh, prps, mdls, inis);

    // solver
    FEM::Solver sol(dom);
    sol.Scheme = FEM::Solver::FE_t;

    // stage # 1 -----------------------------------------------------------
    Dict bcs;
    bcs.Set(-10, "qn",   -1.0);
    bcs.Set(-11, "ux",    0.0);
    bcs.Set(-12, "ux uy", 0.0,0.0);
    dom.SetBCs (bcs);
    //cout << dom << endl;
    sol.Solve ();

    //////////////////////////////////////////////////////////////////////////////////////// Check /////
    
    Table nod_sol;
    nod_sol.Set("                   ux                      uy", /*NRows*/dom.Nods.Size(),
                 0.000000000000000E+00, -3.176060471584131E-02,
                 0.000000000000000E+00, -3.231272276712264E-03,
                 0.000000000000000E+00,  0.000000000000000E+00,
                 1.394996413258417E-03, -3.990499561989564E-02,
                 1.164812317196636E-03, -2.497995580677533E-03,
                 0.000000000000000E+00,  0.000000000000000E+00,
                 1.703556484195066E-03, -6.045921606453851E-03,
                 1.330158368942836E-03, -4.421423576906878E-04,
                 0.000000000000000E+00,  0.000000000000000E+00,
                 0.000000000000000E+00,  2.587551628166839E-03,
                 0.000000000000000E+00,  3.090608328409015E-04,
                 0.000000000000000E+00,  0.000000000000000E+00);

    /*
    for (size_t i=0; i<dom.Eles.Size(); ++i)
    {
        for (size_t j=0; j<9; ++j)
        {
            Vec_t X;
            SDPair res;
            dom.Eles[i]->GetState (res, j);
            dom.Eles[i]->CoordsOfIP (j, X);
            cout << Util::_4<<i << Util::_8s<<X(0) << Util::_8s<<X(1) << Util::_8s<<res("sx") << Util::_8s<<res("sy") << Util::_8s<<res("sz") << Util::_8s<<res("sxy") << endl;
        }
        cout << endl;
    }
    */

    Table ele_sol;
    ele_sol.Set("sx sy sz sxy", dom.Eles.Size()*9/*nip*/,
           -3.686636398791076E-01, -9.594446975698894E-01, -3.686636400305337E-01, -2.320279428144866E-03,
           -4.182545874073820E-01, -1.075156908469196E+00, -4.182545875588081E-01, -1.463068679440246E-03,
           -4.678455420211943E-01, -1.190869135901425E+00, -4.678455421726203E-01, -6.058579142451906E-04,
           -3.643775864392519E-01, -9.568730654605481E-01, -3.643775864392519E-01, -3.538091321004026E-02,
           -4.139685339675263E-01, -1.072585276359855E+00, -4.139685339675263E-01, -3.452370246133565E-02,
           -4.635594885813386E-01, -1.188297503792084E+00, -4.635594885813386E-01, -3.366649169614060E-02,
           -3.600915323575479E-01, -9.543014330761290E-01, -3.600915325728923E-01, -6.844154752286935E-02,
           -4.096824798858223E-01, -1.070013643975436E+00, -4.096824801011666E-01, -6.758433677416473E-02,
           -4.592734344996346E-01, -1.185725871407665E+00, -4.592734347149789E-01, -6.672712600896968E-02,

           -1.402263713436510E+00, -1.786809141530822E+00, -1.402263712734716E+00,  1.466888145567101E-02,
           -1.255368824925315E+00, -1.607270944461583E+00, -1.255368824223520E+00,  4.059588674437482E-02,
           -1.108473870176645E+00, -1.427732666435432E+00, -1.108473869474851E+00,  6.652289053678069E-02,
           -6.244535878594281E-01, -1.086780028827256E+00, -6.244535878594279E-01,  3.915136815850444E-02,
           -4.775586993482324E-01, -9.072418317580165E-01, -4.775586993482324E-01,  6.507837344720824E-02,
           -3.306637445995630E-01, -7.277035537318649E-01, -3.306637445995629E-01,  9.100537723961412E-02,
            1.533565459472928E-01, -3.867509093903485E-01,  1.533565437492008E-01,  6.363385533231522E-02,
            3.002514344584884E-01, -2.072127123211093E-01,  3.002514322603964E-01,  8.956086062101902E-02,
            4.471463892071579E-01, -2.767443429495767E-02,  4.471463870090658E-01,  1.154878644134249E-01,

           -4.688127742200623E-01, -1.121576533620954E+00, -4.512152977207031E-01,  3.852317889932228E-02,
           -2.955402820926813E-01, -7.114322176943739E-01, -2.837846398893462E-01,  3.905651111001705E-02,
           -1.200838335339723E-01, -2.991039514990678E-01, -1.112580775556223E-01,  3.958984336395258E-02,
           -4.663913301166707E-01, -1.119866199228550E+00, -4.479356271827505E-01,  1.174804550449074E-01,
           -2.933325170823173E-01, -7.099355623949983E-01, -2.810035539017913E-01,  1.180137872556022E-01,
           -1.179832361356124E-01, -2.977144638116963E-01, -1.087270493294104E-01,  1.185471195095377E-01,
           -4.639698862509342E-01, -1.118155864937999E+00, -4.446559567466500E-01,  1.964377260445876E-01,
           -2.911247523096084E-01, -7.084389071974748E-01, -2.782224680160886E-01,  1.969710582552824E-01,
           -1.158826389749077E-01, -2.963249762261770E-01, -1.061960212050507E-01,  1.975043905092179E-01,

           -1.071924641229099E+00, -1.334560537698654E+00, -1.054395989039302E+00,  8.133018250085383E-02,
           -6.862677477006157E-01, -8.573831256102094E-01, -6.745580821755607E-01,  8.501054339479910E-02,
           -2.875583031784112E-01, -3.671531549743420E-01, -2.787670649843067E-01,  8.869090108374782E-02,
           -7.272506530670804E-01, -9.972472683319300E-01, -6.494849341641555E-01,  1.270904449897167E-01,
           -4.315798060253995E-01, -6.100559027302878E-01, -3.796299730065066E-01,  1.307708058836620E-01,
           -7.800154199936062E-02, -1.649571125905861E-01, -3.899928753278858E-02,  1.344511635726107E-01,
           -3.825766672414689E-01, -6.599340008768116E-01, -2.445738812006153E-01,  1.728507048376658E-01,
           -1.768918666865909E-01, -3.627286817619725E-01, -8.470186574905904E-02,  1.765310657316111E-01,
            1.315552168432821E-01,  3.723892788156332E-02,  2.007684880071230E-01,  1.802114234205598E-01,

           -7.151487805925244E-02, -1.569184580424235E-01, -5.859378565540315E-02,  6.338703473654486E-03,
           -3.123748932026301E-02, -5.793356679569445E-02, -2.332071443883415E-02,  4.948160471014341E-03,
            1.113551590959656E-02,  4.314694046545611E-02,  1.684212906621386E-02,  3.557617495124511E-03,
           -7.188413381878317E-02, -1.567314966512197E-01, -5.760132525852611E-02,  1.220945371538630E-02,
           -3.200228788954709E-02, -5.814214821424391E-02, -2.325118726471493E-02,  1.081891071274616E-02,
            1.019602547179603E-02,  4.276366717839020E-02,  1.650404188046134E-02,  9.428367736856328E-03,
           -7.225338976848285E-02, -1.565445353415167E-01, -5.660886494315005E-02,  1.808020412519814E-02,
           -3.276708664900011E-02, -5.835072971429435E-02, -2.318166017209668E-02,  1.668966112255799E-02,
            9.256534843826547E-03,  4.238039380982331E-02,  1.616595461320785E-02,  1.529911814666816E-02,

           -1.796476199377748E-01, -2.155679871366960E-01, -1.669921614775340E-01,  6.928999281144035E-02,
           -5.121801414568071E-02, -5.369703093185713E-02, -4.346399369994163E-02,  3.968262983378785E-02,
            8.952680224711032E-02,  1.204891362155872E-01,  9.511609780326073E-02,  1.007526514743669E-02,
           -1.615851014713531E-01, -1.797410502856383E-01, -1.054392647193829E-01,  7.430619542311978E-02,
           -1.089523748330701E-01, -9.366697323461046E-02, -7.455172701867079E-02,  4.469883244546727E-02,
           -1.683324199621913E-03,  4.704342815349105E-02,  2.311353966755699E-02,  1.509146775911612E-02,
           -1.435225853543921E-01, -1.439141153568667E-01, -4.388636988351800E-02,  7.932239815542204E-02,
           -1.666867378699201E-01, -1.336369174596498E-01, -1.056394622596859E-01,  4.971503517776954E-02,
           -9.289345299581475E-02, -2.640228183089109E-02, -4.888902039043272E-02,  2.010767049141840E-02);

    // error tolerance
    SDPair nod_tol, ele_tol;
    nod_tol.Set("ux uy",        1.0e-8, 1.0e-6);
    ele_tol.Set("sx sy sz sxy", 1.0e-5, 1.0e-4, 1.0e-5, 1.0e-5);

    // return error flag
    bool err_nods = dom.CheckErrorNods (nod_sol, nod_tol);
    bool err_eles = dom.CheckErrorIPs  (ele_sol, ele_tol);
    return (err_nods || err_eles);
}
MECHSYS_CATCH
